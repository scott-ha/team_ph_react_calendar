{"version":3,"sources":["components/Calendar.js","components/NameForm.js","App.js","reportWebVitals.js","index.js"],"names":["Calendar","this","props","range","onChange","onToggle","ranges","moveRangeOnFirstSelection","Component","NameForm","value","className","type","App","state","name","startDate","addDays","Date","endDate","handleNameChange","e","setState","target","handleRangeChange","key","Object","getOwnPropertyNames","console","log","index","Number","charAt","length","update","$set","handleCreate","concat","handleRemove","slice","handleSubmit","preventDefault","user","axios","post","then","res","data","alert","JSON","stringify","input","onClick","onSubmit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.638cbc57.chunk.js","sourcesContent":["import { DateRange } from 'react-date-range';\nimport React, {Component} from 'react';\n\nclass Calendar extends Component {\n  render() {\n    const {range, onChange, onToggle} = this.props;\n    return (\n      <DateRange\n        ranges={range}\n        onChange={onChange}\n        moveRangeOnFirstSelection={false}\n      />\n\n    );\n  }\n}\n\nexport default Calendar;\n\n// Calendar 윗부분 제거하시려면 알 props 추가하시면됩니다.\n// showDateDisplay={false}\n","import React from 'react';\nimport './NameForm.css';\n\nconst NameForm = ({value, onChange}) => {\n  return (\n    <div className=\"form\">\n      <h1 className=\"h1-tc\">이름과 일정을 입력해주세요.</h1><br/>\n      <input type=\"search\" onChange={onChange} value={value}/>\n    </div>\n  );\n}\n\nexport default NameForm;\n","import React, {Component} from 'react';\nimport Calendar from './components/Calendar';\nimport {addDays} from 'date-fns';\nimport NameForm from './components/NameForm';\nimport update from 'react-addons-update'\nimport axios from 'axios';\nimport './App.css'\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nclass App extends Component {\n  // default 날짜 수정하시면 됩니다.\n  // null 설정시에 전체범위로 되니 주의하세요.\n  state = {\n    name: '',\n    ranges: [\n      {\n        startDate: addDays(new Date(), 2),\n        endDate: addDays(new Date(), 4)\n      }\n    ]\n  }\n  // nameForm\n  handleNameChange = (e) => {\n    this.setState({name: e.target.value})\n  }\n\n  // Calendar\n  handleRangeChange = (e) => {\n    var key = Object.getOwnPropertyNames(e)[0]\n    console.log(e);\n\n    var index = Number(key.charAt(key.length - 1));\n\n    this.setState({\n      ranges: update(this.state.ranges, {\n        [index-1]: {\n          startDate: {\n            $set: e[key].startDate\n          },\n          endDate: {\n            $set: e[key].endDate\n          }\n        }\n      })\n    })\n  }\n\n  // Calendar Create\n  handleCreate = () => {\n    const {ranges} = this.state;\n    this.setState({\n      ranges: ranges.concat({\n        startDate: addDays(new Date(), 7),\n        endDate: addDays(new Date(), 8)\n      })\n    })\n  }\n\n  handleRemove = () => {\n    const {ranges} = this.state;\n\n    if ((ranges.length) !== 0) {\n      this.setState({\n        ranges: ranges.slice(0, ranges.length-1)\n      })\n    }\n    console.log(ranges.length-1);\n  }\n  // Submit.. POST\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const user = {\n      name: this.state.name,\n      ranges: this.state.ranges\n    };\n\n    // POST URL, parameter 이 부분 변경하시면 됩니다.\n    axios.post(`http://localhost:3001/name`, {user}).then(res => {\n      console.log(res);\n      console.log(res.data); // {response:\"hi\"}\n    });\n    // alert 테스트 용입니다. 삭제하고 사용하세요.\n    alert('name: ' + user.name + '\\ndate: ' + JSON.stringify(user.ranges) + '\\nsubmitted');\n  }\n\n  render() {\n    const {input, ranges} = this.state;\n    const {handleNameChange, handleRangeChange, handleSubmit, handleCreate, handleRemove} = this;\n\n    return (<div className=\"App\">\n      <NameForm value={input} onChange={handleNameChange}/>\n      <Calendar range={ranges} onChange={handleRangeChange}/>\n      <div>\n        <button className=\"Btn-date\" onClick={handleCreate}>일정 추가</button>\n        <button className=\"Btn-date\" onClick={handleRemove}>일정 삭제</button>\n        <form onSubmit={handleSubmit}>\n          <button className=\"Btn-complete\" type=\"submit\">완료</button>\n        </form>\n      </div>\n\n    </div>)\n  }\n}\n\nexport default App;\n\n// SendButton Component화 시키실 거면 components/SendButton.js 쓰셔도 됩니다.\n// 필요없으시면 지우셔도 무방합니다.\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}